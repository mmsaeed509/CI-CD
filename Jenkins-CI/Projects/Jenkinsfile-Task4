///////////////////////////////////////
//                                   //
//  @author      : 00xWolf           //
//    GitHub    : @mmsaeed509       //
//    Developer : Mahmoud Mohamed   //
//  﫥  Copyright : Exodia OS         //
//                                   //
///////////////////////////////////////

pipeline {

    // -------------- Agent -------------- //
    agent any

    // -------------- Needed Tools -------------- //
    tools {

        maven "MAVEN3"
        jdk "OracleJDK11"

    }


    // -------------- Stages -------------- //
    stages {

        // -------------- Fetch Code Stage -------------- //
        stage('Fetch Code') {


            // -------------- Fetch Code Stage Steps -------------- //
            steps {

                git branch: 'main', url: 'https://github.com/hkhcoder/vprofile-project'

            }


        }


        // -------------- Build Stage -------------- //
        stage('Build') {


            // -------------- Build Stage Steps -------------- //
            steps {

                sh 'mvn clean install -DskipTests'

            }

            // -------------- Post Build Stage Steps -------------- //
            post {


                success {

                    echo 'Archiving Artifacts NOW... '
                    archiveArtifacts artifacts: '**/*.war'

                }

            }


        }


        // -------------- UNIT TESTS Stage -------------- //
        stage('UNIT TESTS') {


            // -------------- UNIT TESTS Stage Steps -------------- //
            steps {

                sh 'mvn test'

            }


        }


        // -------------- Code Analysis (Checkstyle) Stage -------------- //
        stage('Checkstyle Code Analysis') {


            // -------------- Checkstyle Code Analysis Stage Steps -------------- //
            steps {

                sh 'mvn checkstyle:checkstyle'

            }


        }


        // -------------- Sonar Analysis Stage -------------- //
        stage('Sonar Analysis') {


            // -------------- Sonar Analysis Stage Environment -------------- //
            environment {

                scannerHome = tool 'sonar4.7'

            }

            // -------------- Sonar Analysis Stage Steps -------------- //
            steps {

               withSonarQubeEnv('sonar') {

                   sh '''

                   ${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
                   -Dsonar.projectName=vprofile \
                   -Dsonar.projectVersion=1.0 \
                   -Dsonar.sources=src/ \
                   -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
                   -Dsonar.junit.reportsPath=target/surefire-reports/ \
                   -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                   -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
                   
                   '''
              
              }

            }

        
        }


        // -------------- Quality Gate Stage -------------- //
        stage("Quality Gate") {


            // -------------- Quality Gate Stage Steps -------------- //
            steps {

                timeout(time: 1, unit: 'HOURS') {

                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true

                }

            }

        }


        // -------------- Upload Artifact To Nexus Stage -------------- //
        stage("UploadArtifact"){


            // -------------- Upload Artifact To Nexus Stage Steps -------------- //
            steps{

                nexusArtifactUploader(
                    
                    nexusVersion: 'nexus3',
                    protocol: 'http',
                    nexusUrl: '54.160.115.166:8081',
                    groupId: 'QA',
                    version: "${env.BUILD_ID}-${env.BUILD_TIMESTAMP}",
                    repository: 'vprofile-repo',
                    credentialsId: 'NexusLogin',
                    artifacts: [
                        
                        [

                            artifactId: 'vproapp',
                            classifier: '',
                            file: 'target/vprofile-v2.war',
                            type: 'war'

                            
                        ]

                    ]

                )

            
            }

        }



    }


}
